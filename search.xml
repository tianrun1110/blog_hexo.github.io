<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>mysql 函数汇总</title>
    <url>/mysql-%E5%87%BD%E6%95%B0%E6%B1%87%E6%80%BB.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>MySQL提供了众多的强大的功能，方便易用的函数，使用这些函数，可以极大的提高用户对于数据库的管理效率，更加的灵活的满足不同的用户的需求。</p>
<h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><ol>
<li>==abs（x）== 返回x的绝对值。</li>
<li>==pi（）== 返回圆周率n，默认显示6为小数。</li>
<li>==sqrt（x）== 返回非负数x的二次方根</li>
<li>==mod（x，y）== 返回x被y除后的余数</li>
<li>==ceil（x），ceiling（x）== 返回不小于x的最小整数</li>
<li>==floor（x）== 返回不大于x的最大整数</li>
<li>==round（x），round（x，y）== 前者返回最近于x的整数（四舍五入）；后者返回最接近于x的数，其值保留到小数点后面y位，若y为负值，则将保留到x到小数点左边y位</li>
<li>==sign（x）== 返回参数x的符号，-1表示负数，0表示0，1表示正数</li>
<li>==pow（x，y），power（x，y）== 返回x的y次乘方的值</li>
<li>==exp（x）== e的x次乘方的值</li>
<li>==log（x）== x相对于基数e的对数</li>
<li>==log10（x）== 返回x的基数10的对数</li>
<li>==radians（x）== x由角度转化为弧度的值</li>
<li>==degrees（x）== x由弧度转化为角度的值</li>
<li>==sin（x），asin（x）== 前者返回x的正弦，其中x为给定的弧度值；后者返回x的反正弦值，x为正弦</li>
<li>==cos（x），acos（x）== 前者返回x的余弦，其中x为给定的弧度值；后者返回x的反余弦值，x为余弦</li>
<li>==tan（x），atan（x）== 前者返回x的正切，其中x为给定的弧度值；后者返回x的反正切值，x为正切</li>
<li>==cot（x）== 返回给定弧度值x的余切<h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2></li>
<li>==char_length（str）== 计算字符串字符个数</li>
<li>==concat（s1，s2，…）== 返回连接参数产生的字符串，一个或多个待拼接的内容，任意一个为NULL则返回值为NULL、</li>
<li>==concat_ws(x,s1,s2,…) == 返回多个字符串拼接之后的字符串，每个字符串之间有一个x</li>
<li>==insert(s1,x,len,s2)== 返回字符串s1，其子字符串起始于位置x，被字符串s2取代len个字符</li>
<li>==lower(str)和lcast(str);upper(str)和ucast(str)== 前两者将str中的字母全部转换成小写，后两者将字符串中的字母全部转换成大写</li>
<li>==left(s,n),right(s,n)== 前者返回字符串s从最左边开始的n个字符，后者返回字符串s从最右边开始的n个字符</li>
<li>==lpad(s1,len,s2),rpad(s1,len,s2)== 前者返回s1，其左边由字符串s2填补到len字符长度，假如s1的长度大于len，则返回值被缩短至len字符；前者返回s1，其右边由字符串s2填补到len字符长度，假如s1的长度大于len，则返回值被缩短至len字符</li>
<li>==ltrim(s),rtrim(s)== 前者返回字符串s，其左边所有空格被删除；后者返回字符串s，其右边所有空格被删除</li>
<li>==trim(s)== 返回字符串s删除了两边空格之后的字符串</li>
<li>==trim(s1 from s)== 删除字符串s两端所有子字符串s1，未指定s1的情况下则默认删除空格</li>
<li>==repeat(s,n)== 返回一个由重复字符串s组成的字符串，字符串s的数目等于n</li>
<li>==space(n)== 返回一个由n个空格组成的字符串</li>
<li>==replace(s,s1,s2)== 返回一个字符串，用字符串s2替代字符串s中所有的字符串s1</li>
<li>==strcmp(s1,s2)== 若s1和s2中所有的字符串都相同，则返回0；根据当前分类次序，第一个参数小于第二个则返回-1，其他情况返回1</li>
<li>==substring(s,n,len),mid(s,n,len)== 两个函数作用相同，从字符串s中返回一个第n个字符开始、长度为len的字符串</li>
<li>==locate(str1,str),position(str1 in str),instr(str,str1)== 三个函数作用相同，返回子字符串str1在字符串str中的开始位置（从第几个字符开始）</li>
<li>==reverst(s)== 将字符串s反转</li>
<li>==elt(n,str1,str2,str3,…)== 返回第N个字符串  <h2 id="日期和时间函数"><a href="#日期和时间函数" class="headerlink" title="日期和时间函数"></a>日期和时间函数</h2></li>
<li>==curdate(),current_date()== 将当前日期按照”YYYY-MM-DD”或者”YYYYMMDD”格式的值返回，具体格式根据函数用在字符串或是数字语境中而定</li>
<li>==CURRENT_TIMESTAMP()、LOCALTIME()、NOW()、SYSDATE()==  这四个函数作用相同，返回当前日期和时间值，格式为”YYYY_MM-DD HH:MM:SS”或”YYYYMMDDHHMMSS”，具体格式根据函数用在字符串或数字语境中而定</li>
<li>==UNIX_TIMESTAMP()、UNIX_TIMESTAMP(date)== 前者返回一个格林尼治标准时间1970-01-01 00:00:00到现在的秒数，后者返回一个格林尼治标准时间1970-01-01 00:00:00到指定时间的秒数</li>
<li>==FROM_UNIXTIME(date)== 和UNIX_TIMESTAMP互为反函数，把UNIX时间戳转换为普通格式的时间</li>
<li>==UTC_DATE()和UTC_TIME()== 前者返回当前UTC（世界标准时间）日期值，其格式为”YYYY-MM-DD”或”YYYYMMDD”，后者返回当前UTC时间值，其格式为”YYYY-MM-DD”或”YYYYMMDD”。具体使用哪种取决于函数用在字符串还是数字语境中</li>
</ol>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
